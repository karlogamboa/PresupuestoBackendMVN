# Application Configuration
server.port=8443
# Habilitar HTTPS
server.ssl.enabled=true
server.ssl.key-store=presupuesto-https.p12
server.ssl.key-store-password=password
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=presupuesto
# Configuraci√≥n Tomcat para proxy (opcional, mantener si usas proxy)
server.tomcat.protocol-header=x-forwarded-proto
server.tomcat.protocol-header-https-value=https
server.tomcat.port-header=x-forwarded-port
server.tomcat.remote-ip-header=x-forwarded-for
# Handle proxy headers from CloudFront/Load Balancer
server.forward-headers-strategy=framework
# server.servlet.context-path=/api  # Commented out to allow Swagger UI access




# AWS Region Configuration
spring.cloud.aws.region.static=${AWS_REGION:us-east-1}
spring.cloud.aws.credentials.instanceProfile=true

# AWS Parameter Store integration (these keys will be resolved from SSM Parameter Store if present)
aws.region=${/presupuesto/aws/region:${AWS_REGION:us-east-2}}
aws.dynamodb.endpoint=${/presupuesto/aws/dynamodb/endpoint:${DYNAMODB_ENDPOINT:}}
aws.dynamodb.table.prefix=${/presupuesto/aws/dynamodb/table/prefix:${TABLE_PREFIX:presupuesto-}}

# JWT/OAuth2 Configuration (Parameter Store fallback)
spring.security.oauth2.resourceserver.jwt.issuer-uri=${/presupuesto/okta/jwt-issuer-uri:https://trial-6802190.okta.com/oauth2/default}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${/presupuesto/okta/jwt-issuer-uri:https://trial-6802190.okta.com/oauth2/default}/v1/keys

# Okta Client Configuration (for frontend login and token exchange)
okta.oauth2.issuer=${/presupuesto/okta/issuer-uri:https://trial-6802190.okta.com/oauth2/default}
okta.oauth2.client-id=${/presupuesto/okta/client-id:0oasv2pcg4hRbY5YV697}
okta.oauth2.client-secret=${/presupuesto/okta/client-secret:gGS8iGj05MzqWQWQd2XB5mXUKqiSAkd06RnypVFJ0ZCuBsvdSsK9RJ8HJWvU6RE5}
okta.oauth2.audience=${/presupuesto/okta/audience:api://default}

# CORS Configuration (Parameter Store fallback)
cors.allowed-origins=${/presupuesto/cors/allowed-origins:https://d3i4aa04ftrk87.cloudfront.net,https://3.148.191.49:8443}
cors.allowed-methods=${/presupuesto/cors/allowed-methods:GET,POST,PUT,DELETE,OPTIONS}
cors.allowed-headers=${/presupuesto/cors/allowed-headers:*}

# Logging Configuration
logging.level.com.cdc.presupuesto=DEBUG
logging.level.software.amazon.awssdk=INFO
logging.level.io.awspring.cloud=DEBUG
logging.level.org.springframework=${presupuesto.logging.level.org.springframework:INFO}
logging.level.org.apache.coyote.http11.Http11InputBuffer=WARN
logging.level.org.apache.coyote.http11.Http11Processor=WARN
logging.level.org.apache.catalina.connector=WARN
logging.level.org.apache.tomcat.util.net=WARN
# Suppress TLS parsing errors that occur when HTTPS requests hit HTTP endpoint
logging.level.org.apache.coyote=WARN

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=false
springdoc.swagger-ui.try-it-out-enabled=true
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.filter=true
springdoc.default-consumes-media-type=application/json
springdoc.default-produces-media-type=application/json
springdoc.show-actuator=false
